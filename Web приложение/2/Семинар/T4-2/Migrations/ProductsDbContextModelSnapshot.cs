// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Server.Db.Model;

#nullable disable

namespace T4_1.Migrations
{
    [DbContext(typeof(ProductsDbContext))]
    partial class ProductsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("T4_1.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("Описание");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("Название");

                    b.HasKey("Id");

                    b.ToTable("Категория");
                });

            modelBuilder.Entity("T4_1.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Category_Id")
                        .HasColumnType("integer");

                    b.Property<int>("Cost")
                        .HasColumnType("integer")
                        .HasColumnName("Цена");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("Описание");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("Название");

                    b.Property<int?>("Store_Id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Category_Id");

                    b.HasIndex("Store_Id");

                    b.ToTable("Продукт");
                });

            modelBuilder.Entity("T4_1.Model.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Count")
                        .HasColumnType("integer")
                        .HasColumnName("Количество");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("Описание");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("Название");

                    b.HasKey("Id");

                    b.ToTable("Склад");
                });

            modelBuilder.Entity("T4_1.Model.Product", b =>
                {
                    b.HasOne("T4_1.Model.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Category_Id");

                    b.HasOne("T4_1.Model.Store", "Stores")
                        .WithMany("Products")
                        .HasForeignKey("Store_Id");

                    b.Navigation("Category");

                    b.Navigation("Stores");
                });

            modelBuilder.Entity("T4_1.Model.Store", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
